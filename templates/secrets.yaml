apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xl-release.fullname" . }}
  labels:
    app: {{ template "xl-release.name" . }}
    chart: {{ template "xl-release.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  {{- include "render.value-if-not-secret" (dict "key" "release-password" "value" .Values.AdminPassword "default" (randAlphaNum 10) ) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "xlr-License" "value" .Values.xlrLicense) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "repositoryKeystore" "value" .Values.RepositoryKeystore) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "keystorePassphrase" "value" .Values.KeystorePassphrase) | nindent 2 -}}
  {{- if .Values.UseExistingDB.Enabled -}}
  {{- include "render.value-if-not-secret" (dict "key" "databaseUsername" "value" .Values.UseExistingDB.XLR_DB_USER) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "databasePassword" "value" .Values.UseExistingDB.XLR_DB_PASS) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "reportDatabaseUsername" "value" .Values.UseExistingDB.XLR_REPORT_DB_USER) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "reportDatabasePassword" "value" .Values.UseExistingDB.XLR_REPORT_DB_PASS) | nindent 2 -}}
  {{- end -}}
  {{- if .Values.UseExistingMQ.Enabled -}}
  {{- include "render.value-if-not-secret" (dict "key" "rabbitmqUsername" "value" .Values.UseExistingMQ.XLR_TASK_QUEUE_USERNAME) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "rabbitmqPassword" "value" .Values.UseExistingMQ.XLR_TASK_QUEUE_PASSWORD) | nindent 2 -}}
  {{- end -}}
  {{- if .Values.oidc.external -}}
  {{- include "render.value-if-not-secret" (dict "key" "oidcClientId" "value" .Values.oidc.clientId) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "oidcClientSecret" "value" .Values.oidc.clientSecret) | nindent 2 -}}
  {{- if .Values.oidc.clientAuthJwt.enable -}}
  {{- include "render.value-if-not-secret" (dict "key" "oidcClientAuthJwtKeyStorePassword" "value" .Values.oidc.clientAuthJwt.keyStore.password) | nindent 2 -}}
  {{- include "render.value-if-not-secret" (dict "key" "oidcClientAuthJwtKeyPassword" "value" .Values.oidc.clientAuthJwt.key.password) | nindent 2 -}}
  {{- end -}}
  {{- if .Values.oidc.accessToken.enable -}}
  {{- include "render.value-if-not-secret" (dict "key" "oidcAccessTokenSecretKey" "value" .Values.oidc.accessToken.secretKey) | nindent 2 -}}
  {{- end -}}
  {{- end -}}

