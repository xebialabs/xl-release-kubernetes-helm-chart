apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "xl-release.fullname" . }}
  labels:
    app: {{ template "xl-release.name" . }}
    chart: {{ template "xl-release.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "xl-release.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "xl-release.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "xl-release.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 10001
      {{- if .Values.ImagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.ImagePullSecret }}
      {{- end }}
      {{- if or (and (not .Values.UseExistingDB.Enabled) (.Values.postgresql.install)) (.Values.rabbitmq.install) }}
      initContainers:
        {{- if and (not .Values.UseExistingDB.Enabled) (.Values.postgresql.install) }}
        - name: wait-for-db
          image: "{{ .Values.TinyToolsImageRepository }}:{{ .Values.TinyToolsImageTag }}"
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
                sleep 2;
              done;
          env:
           - name: POSTGRES_SVC
             value: {{ .Release.Name }}-postgresql
           - name: POSTGRES_PORT
             value: "5432"
        {{- end }}
        {{- if .Values.rabbitmq.install }}
        - name: wait-for-rabbitmq
          image: "{{ .Values.TinyToolsImageRepository }}:{{ .Values.TinyToolsImageTag }}"
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $RABBITMQ_SVC $RABBITMQ_PORT && echo rabbitmq ok; do
                sleep 2;
              done;
          env:
           - name: RABBITMQ_SVC
             value: {{ .Release.Name }}-rabbitmq
           - name: RABBITMQ_PORT
             value: "5672"
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.ImageRepository }}:{{ .Values.ImageTag }}"
          imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
          ports:
            - name: http
              containerPort: 5516
          {{- if .Values.release.configurationManagement.configuration.enabled }}
          command:
            - sh
            - -c
            - >
              /opt/xebialabs/tini -- /opt/xebialabs/xlr-configuration-management/op-based-run.sh
          {{- end }}
          volumeMounts:
            {{- if .Values.oidc.enabled }}
            - name: release-conf
              mountPath: /opt/xebialabs/xl-release-server/default-conf/op-xl-release.conf.template
              subPath: op-xl-release.conf.template
            {{- end }}
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/reports
              subPath: reports
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/work
              subPath: work
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/conf
              subPath: conf
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/ext
              subPath: ext
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/hotfix
              subPath: hotfix
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/hotfix/lib
              subPath: lib
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/hotfix/plugins
              subPath: plugins
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/log
              subPath: log
            {{- if .Values.release.configurationManagement.volumeMounts.enabled }}
            {{- range $key, $val := .Values.release.configurationManagement.volumeMounts.paths }}
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/{{ $key }}
              subPath: {{ $val }}
            {{- end }}
            {{- end }}
            {{- if .Values.release.configurationManagement.configuration.enabled }}
            - name: xlr-configuration-management-volume
              mountPath: /opt/xebialabs/xlr-configuration-management
            {{- end }}
          {{- if .Values.HealthProbes }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.HealthProbesLivenessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.HealthProbesReadinessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
          {{- end }}
          env:
            - name: ADMIN_PASSWORD
              {{- include "render.value-secret" (dict  "value" .Values.AdminPassword "defaultName" (include "xl-release.fullname" .) "defaultKey" "release-password" "default" true "context" $ ) | nindent 14 }}
            - name: XL_CLUSTER_MODE
              value: full
            {{- $ingressclass := index .Values "ingress" "annotations" "kubernetes.io/ingress.class" }}
            {{- if and .Values.ingress.Enabled }}
            {{- if and (contains $ingressclass "nginx") (ne .Values.ingress.path "/") }}
            {{- range .Values.ingress.hosts }}
            - name: SERVER_URL
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}{{ include "path.fullname" $ }}
            {{- end }}
            {{- else }}
            {{- range .Values.ingress.hosts }}
            - name: SERVER_URL
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}{{ $.Values.ingress.path }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.UseExistingDB.Enabled }}
            - name: XL_DB_URL
              value: {{ .Values.UseExistingDB.XLR_DB_URL }}
            - name: XL_DB_USERNAME
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingDB.XLR_DB_USER "defaultName" (include "xl-release.fullname" .) "defaultKey" "databaseUsername" "context" $ ) | nindent 14 }}
            - name: XL_DB_PASSWORD
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingDB.XLR_DB_PASS "defaultName" (include "xl-release.fullname" .) "defaultKey" "databasePassword" "context" $ ) | nindent 14 }}
            - name: XL_REPORT_DB_URL
              value: {{ .Values.UseExistingDB.XLR_REPORT_DB_URL }}
            - name: XL_REPORT_DB_USERNAME
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingDB.XLR_REPORT_DB_USER "defaultName" (include "xl-release.fullname" .) "defaultKey" "reportDatabaseUsername" "context" $ ) | nindent 14 }}
            - name: XL_REPORT_DB_PASSWORD
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingDB.XLR_REPORT_DB_PASS "defaultName" (include "xl-release.fullname" .) "defaultKey" "reportDatabasePassword" "context" $ ) | nindent 14 }}
            {{- else }}
            {{- if .Values.postgresql.install }}
            - name: XL_DB_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/xlr-db
            - name: XL_DB_USERNAME
              value: xlr
            - name: XL_DB_PASSWORD
              value: "xlr"
            - name: XL_REPORT_DB_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/xlr-report-db
            - name: XL_REPORT_DB_USERNAME
              value: xlr-report
            - name: XL_REPORT_DB_PASSWORD
              value: "xlr-report"
            {{- end }}
            {{- end }}
            - name: XL_LICENSE
              {{- include "render.value-secret" (dict  "value" .Values.xlrLicense "defaultName" (include "xl-release.fullname" .) "defaultKey" "xlr-License" "context" $ ) | nindent 14 }}
            - name: XL_METRICS_ENABLED
              value: "{{ .Values.MetricsEnabled}}"
            - name: GENERATE_XL_CONFIG
              value: "{{ .Values.GenerateXlConfig}}"
            - name: USE_IP_AS_HOSTNAME
              value: "{{ .Values.UseIpAsHostname}}"
            - name: FORCE_UPGRADE
              value: "true"
            - name: FORCE_REMOVE_MISSING_TYPES
              value: "{{ .Values.ForceRemoveMissingTypes}}"
            - name: ENABLE_EMBEDDED_QUEUE
              value: "false"
            {{- if .Values.rabbitmq.install }}
            - name: XLR_TASK_QUEUE_USERNAME
              value: {{ .Values.rabbitmq.auth.username }}
            - name: XLR_TASK_QUEUE_PASSWORD
              value: {{ .Values.rabbitmq.auth.password }}
            - name: XLR_TASK_QUEUE_URL
              value: "amqp://{{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}.svc.cluster.local:5672/"
            - name: XLR_TASK_QUEUE_NAME
              value: "xlr-tasks-queue"
            {{- else }}
            {{- if .Values.UseExistingMQ.Enabled }}
            - name: XLR_TASK_QUEUE_USERNAME
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingMQ.XLR_TASK_QUEUE_USERNAME "defaultName" (include "xl-release.fullname" .) "defaultKey" "rabbitmqUsername" "context" $ ) | nindent 14 }}
            - name: XLR_TASK_QUEUE_PASSWORD
              {{- include "render.value-secret" (dict  "value" .Values.UseExistingMQ.XLR_TASK_QUEUE_PASSWORD "defaultName" (include "xl-release.fullname" .) "defaultKey" "rabbitmqPassword" "context" $ ) | nindent 14 }}
            - name: XLR_TASK_QUEUE_URL
              value: {{ .Values.UseExistingMQ.XLR_TASK_QUEUE_URL | quote }}
            - name: XLR_TASK_QUEUE_NAME
              value: {{ .Values.UseExistingMQ.XLR_TASK_QUEUE_NAME | quote }}
            {{- end }}
            {{- end }}
            - name: REPOSITORY_KEYSTORE
              {{- include "render.value-secret" (dict  "value" .Values.RepositoryKeystore "defaultName" (include "xl-release.fullname" .) "defaultKey" "repositoryKeystore" "context" $ ) | nindent 14 }}
            - name: REPOSITORY_KEYSTORE_PASSPHRASE
              {{- include "render.value-secret" (dict  "value" .Values.KeystorePassphrase "defaultName" (include "xl-release.fullname" .) "defaultKey" "keystorePassphrase" "context" $ ) | nindent 14 }}
            {{- if .Values.oidc.external }}
            - name: OP_GENERATE_XL_CONFIG
              value: "{{ .Values.GenerateXlConfig}}"
            - name: OIDC_CLIENT_ID
              {{- include "render.value-secret" (dict  "value" .Values.oidc.clientId "defaultName" (include "xl-release.fullname" .) "defaultKey" "oidcClientId" "context" $ ) | nindent 14 }}
            - name: OIDC_CLIENT_SECRET
              {{- include "render.value-secret" (dict  "value" .Values.oidc.clientSecret "defaultName" (include "xl-release.fullname" .) "defaultKey" "oidcClientSecret" "context" $ ) | nindent 14 }}
            {{- if .Values.oidc.clientAuthJwt.enable -}}
            {{- if .Values.oidc.clientAuthJwt.keyStore.password -}}
            - name: OIDC_CLIENT_AUTH_JWT_KEYSTORE_PASSWORD
              {{- include "render.value-secret" (dict "value" .Values.oidc.clientAuthJwt.keyStore.password "defaultName" (include "xl-release.fullname" .) "defaultKey" "oidcClientAuthJwtKeyStorePassword" "context" $ ) | nindent 14 }}
            {{- end -}}
            {{- if .Values.oidc.clientAuthJwt.key.password -}}
            - name: OIDC_CLIENT_AUTH_JWT_KEY_PASSWORD
              {{- include "render.value-secret" (dict "value" .Values.oidc.clientAuthJwt.key.password "defaultName" (include "xl-release.fullname" .) "defaultKey" "oidcClientAuthJwtKeyPassword" "context" $ ) | nindent 14 }}
            {{- end -}}
            {{- end -}}
            {{- if and .Values.oidc.accessToken.enable .Values.oidc.accessToken.secretKey -}}
            - name: OIDC_ACCESS_TOKEN_SECRET_KEY
              {{- include "render.value-secret" (dict "value" .Values.oidc.accessToken.secretKey "defaultName" (include "xl-release.fullname" .) "defaultKey" "oidcAccessTokenSecretKey" "context" $ ) | nindent 14 }}
            {{- end -}}
            {{- end }}
            {{- if .Values.release.configurationManagement.environment.enabled }}
            {{- range $key, $val := .Values.release.configurationManagement.environment.variables }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.release.terminationGracePeriodSeconds }}
      volumes:
        {{- if .Values.Persistence.Enabled }}
        - name: reports-dir
          persistentVolumeClaim:
            claimName: {{ template "xl-release.fullname" . }}
        {{- else }}
        - name: reports-dir
          emptyDir: {}
        {{- end }}
        {{- if .Values.oidc.enabled }}
        - name: release-conf
          configMap:
            name: xl-release-conf
        {{- end }}
        {{- if .Values.release.configurationManagement.configuration.enabled }}
        - name: xlr-configuration-management-volume
          configMap:
            name: xlr-configuration-management-script
            defaultMode: 0777
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
