apiVersion: v1
kind: Service
metadata:
  name: {{ include "common.names.fullname" . }}-headless
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.service.annotationsHeadless .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
    {{- end -}}
    {{- if .Values.service.annotationsHeadless }}
    {{- include "common.tplvalues.render" (dict "value" .Values.service.annotationsHeadless "context" $) | nindent 4 }}
    {{- end -}}
  {{- end }}
spec:
  clusterIP: None
  ports:
    {{- if .Values.http2.enabled }}
    - name: {{ .Values.service.portNames.releaseHttps }}
      port: {{ .Values.service.ports.releaseHttps }}
      targetPort: {{ .Values.service.portNames.releaseHttps }}
    {{- else }}
    - name: {{ .Values.service.portNames.releaseHttp }}
      port: {{ .Values.service.ports.releaseHttp }}
      targetPort: {{ .Values.service.portNames.releaseHttp }}
    {{- end }}
  selector: {{ include "common.labels.matchLabels" . | nindent 4 }}
  publishNotReadyAddresses: true
