# Default values for xl-release.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Platform on which to install the chart (PlainK8s/AWSEKS/AzureAKS/GoogleGKE)
K8sSetup:
  Platform: PlainK8s

# No. of XL-Release master pods to run.
replicaCount: 3

## XL-Release image version
## Ref: https://hub.docker.com/r/xebialabs/xl-release/tags
ImageRepository: "xebialabs/xl-release"
ImageTag: "10.3"

## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest',set to 'IfNotPresent'
ImagePullPolicy: "Always"

## Secrets must be manually created in the namespace.
# ImagePullSecret: xlRelease

keycloak:
  install: true
  extraEnv: |
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_USER
      value: admin
    - name: KEYCLOAK_PASSWORD
      value: admin
    - name: JGROUPS_DISCOVERY_PROTOCOL
      value: dns.DNS_PING
    - name: JGROUPS_DISCOVERY_PROPERTIES
      value: 'dns_query={{ include "keycloak.serviceDnsName" . }}'
    - name: CACHE_OWNERS_COUNT
      value: "2"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "2"
    - name: JAVA_OPTS
      value: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=50.0
        -Djava.net.preferIPv4Stack=true
        -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS
        -Djava.awt.headless=true
    - name: DB_VENDOR
      value: postgres
    - name: DB_ADDR
      value: {{ .Release.Name }}-postgresql
    - name: DB_PORT
      value: "5432"
    - name: DB_DATABASE
      value: keycloak
    - name: DB_USER
      value: keycloak
    - name: DB_PASSWORD
      value: keycloak
    - name: KEYCLOAK_IMPORT
      value: /realm/digitalai-platform-realm.json
  extraVolumes: |
    - name: realm-config
      configMap:
        name: {{ .Release.Name }}-realm
  extraVolumeMounts: |
    - name: realm-config
      mountPath: "/realm/"
      readOnly: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    rules:
      -
        host: 'keycloak.example.com'
        paths:
          - path: /
            pathType: Prefix
    tls: []
  postgresql:
    enabled: false

oidc:
  enabled: true
  external: false
  clientId:
  clientSecret:
  issuer:
  keyRetrievalUri:
  accessTokenUri:
  userAuthorizationUri:
  logoutUri:
  redirectUri:
  postLogoutRedirectUri:
  userNameClaim:
  fullNameClaim:
  emailClaim:
  rolesClaim:

## Install nginx subchart. If you have nginx already installed, set 'install' to 'false'.
## If you have any other ingress controller installed, you can set the 'install' to 'false'.
## Ref: https://github.com/bitnami/charts/blob/master/bitnami/nginx-ingress-controller/README.md
nginx-ingress-controller:
  install: true
  image:
    pullSecrets: []
  replicaCount: 1
  resources:
    limits: {}
    #   cpu: 100m
    #   memory: 128Mi
    requests: {}
    #   cpu: 100m
    #   memory: 128Mi
  service:
    type: NodePort

haproxy-ingress:
  install: false

## Ingress Configuration
## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  Enabled: true
  annotations:
    # ingress.kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-name: JSESSIONID
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
  path: /
  hosts:
    - example.com

#  tls:
#    - secretName: example-secretsName
#      hosts:
#        - example.com

# https://docs.xebialabs.com/v.10.2/release/docker/docker-environment-variables/
AdminPassword:
# Provide the admin password to be used

xlrLicense:
# Convert xl-release.lic files content to base64 ( cat xl-release.lic | base64 -w 0 ) and put the output here

RepositoryKeystore:
# https://docs.xebialabs.com/v.10.2/release/how-to/changing-passwords-in-xl-release/
# Convert repository-keystore.jceks files content to base64 ( cat repository-keystore.jceks | base64 -w 0 ) and put the output here

KeystorePassphrase:
# Passphrase for repository-keystore.jceks file

## Ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md
## Install postgresql chart. If you have an existing database deployment, set 'install' to 'false'.
postgresql:
  install: true
  initdbScriptsSecret: "postgresql-init-sql-xlr"
  image:
    pullSecrets: []
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
    existingClaim: ""
  postgresqlUsername: postgres
  postgresqlPassword: ""
  postgresqlMaxConnections: ""
  service:
    type: ClusterIP
    port: 5432
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

GenerateXlConfig: true
MetricsEnabled: false
UseIpAsHostname: false

## Ref: https://docs.xebialabs.com/v.10.2/release/how-to/configure-the-xl-release-sql-repository-in-a-database/#configuration-examples
UseExistingDB:
  Enabled: false
  # If you want to use a existing database, change 'postgresql.install' to 'false'.
  # Set 'UseExistingDB.Enabled' to 'true'.Uncomment the following lines and provide the values.
  # XLR_DB_URL:
  # XLR_DB_USER:
  # XLR_DB_PASS:
  # XLR_REPORT_DB_URL:
  # XLR_REPORT_DB_USER:
  # XLR_REPORT_DB_PASS:

## Install rabbitmq chart. If you have an existing message queue deployment, set 'install' to 'false'.
## ref: https://github.com/bitnami/charts/blob/master/bitnami/rabbitmq/README.md
rabbitmq:
  install: true
  replicaCount: 3
  image:
    pullSecrets: []
  auth:
    username: guest
    password: guest
    erlangCookie: RELEASERABBITMQCLUSTER
  extraPlugins: 'rabbitmq_amqp1_0'
  extraSecrets:
    xlr-load-definition:
      xlr-load_definition.json: |
        {
        "users": [
          {
              "name": "{{ .Values.auth.username }}",
              "password": "{{ .Values.auth.password }}",
              "tags": "administrator"
          }
          ],
        "vhosts": [
          {
            "name": "/"
          }
          ],
          "permissions": [
          {
            "user": "{{ .Values.auth.username }}",
            "vhost": "/",
            "configure": ".*",
            "write": ".*",
            "read": ".*"
          }
          ],
        "global_parameters": [
          {
            "name": "cluster_name",
            "value": ""
          }
          ],
         "policies": [
            {
              "name": "ha-all",
              "apply-to": "all",
              "pattern": ".*",
              "vhost": "/",
              "definition": {
                "ha-mode": "all",
                "ha-sync-mode": "automatic",
                "ha-sync-batch-size": 1
              }
            }
          ]
        }
  loadDefinition:
    enabled: true
    existingSecret: xlr-load-definition
  extraConfiguration: |
    load_definitions = /app/xlr-load_definition.json
  persistence:
    enabled: true
    storageClass: "-"
    size: 8Gi
  service:
    type: ClusterIP
  volumePermissions:
    enabled: true

## Ref: https://docs.xebialabs.com/v.10.2/release/webhooks/webhooks-overview/
UseExistingMQ:
  Enabled: false
  # If you want to use a existing Message Queue, change 'rabbitmq.install' to 'false'.
  # Set 'UseExistingMQ.Enabled' to 'true'.Uncomment the following lines and provide the values.
  # XLR_TASK_QUEUE_USERNAME:
  # XLR_TASK_QUEUE_PASSWORD:
  # XLR_TASK_QUEUE_NAME:
  # XLR_TASK_QUEUE_URL:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 3
  #  memory: 3Gi
  # requests:
  #  cpu: 0.7
  #  memory: 1700Mi

## Configure extra options for liveness and readiness probes
HealthProbes: true
HealthProbesLivenessTimeout: 60
HealthProbesReadinessTimeout: 60
HealthProbeFailureThreshold: 12
HealthPeriodScans: 10

nodeSelector: {}

tolerations: []

## Affinity and anti-affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## XL Release data Persistent Volume for 'XL Release Report'
## If "Persistence.Enabled" set to "false", it will use hostPath.
Persistence:
  Enabled: true
  ## Choose storage class provided by your cloud provider, example "ssd" on GKE, AWS and OpenStack
  StorageClass: "-"
  Annotations: {}
  AccessMode: ReadWriteOnce
  Size: 8Gi

