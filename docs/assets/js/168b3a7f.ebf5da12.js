"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[766],{8697:function(e,i,t){t.r(i),t.d(i,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var n=t(7462),r=t(3366),a=(t(7294),t(3905)),l=["components"],o={sidebar_position:2},u="Building the operator image from helm chart",d={unversionedId:"building-operator-image",id:"building-operator-image",isDocsHomePage:!1,title:"Building the operator image from helm chart",description:"Build and publish with script",source:"@site/docs/building-operator-image.md",sourceDirName:".",slug:"/building-operator-image",permalink:"/xl-release-kubernetes-helm-chart/docs/building-operator-image",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/xl-release-kubernetes-helm-chart/docs/intro"}},p=[{value:"Build and publish with script",id:"build-and-publish-with-script",children:[],level:2},{value:"Build and publish with gradle",id:"build-and-publish-with-gradle",children:[],level:2}],s={toc:p};function m(e){var i=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"building-the-operator-image-from-helm-chart"},"Building the operator image from helm chart"),(0,a.kt)("h2",{id:"build-and-publish-with-script"},"Build and publish with script"),(0,a.kt)("p",null,"Use script ",(0,a.kt)("inlineCode",{parentName:"p"},"build_operator.sh")," to build and publish operator image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./build_operator.sh $RELEASE_EXPLICIT $DOCKER_HUB_REPOSITORY $BRANCH\n")),(0,a.kt)("p",null,"Where env variables are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RELEASE_EXPLICIT")," - version of them releasing image, use ",(0,a.kt)("inlineCode",{parentName:"li"},"22.0.0-114.1255")," pattern"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HUB_REPOSITORY")," - DockerHub repository name, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"xebialabsunsupported")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"BRANCH_NAME")," - branch from where release will be done, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"master")," ")),(0,a.kt)("h2",{id:"build-and-publish-with-gradle"},"Build and publish with gradle"),(0,a.kt)("p",null,"Use following task to release the image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./gradlew clean publishToDockerHub --stacktrace\n")),(0,a.kt)("p",null,"With following variables you can influence on version and repository where release will be done:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RELEASE_EXPLICIT")," - version of them releasing image, use ",(0,a.kt)("inlineCode",{parentName:"li"},"22.0.0-114.1255")," pattern"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DOCKER_HUB_REPOSITORY")," - DockerHub repository name, default is ",(0,a.kt)("inlineCode",{parentName:"li"},"xebialabsunsupported"))))}m.isMDXComponent=!0}}]);